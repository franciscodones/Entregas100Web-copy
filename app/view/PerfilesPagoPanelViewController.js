/*
 * File: app/view/PerfilesPagoPanelViewController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Entregas100Web.view.PerfilesPagoPanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.perfilespagopanel',

    onBtnRefrescarClick: function(button, e, eOpts) {
        var me = this;

        me.getStore("PerfilesPagoLocalStore").load();
        me.getStore("CombinacionesFormaPerfilLocalStore").load();
    },

    onPerfilesPagoGridSelect: function(rowmodel, record, index, eOpts) {
        var me = this,
            combinacionesFormaPerfilLocalStore = me.getStore("CombinacionesFormaPerfilLocalStore");

        combinacionesFormaPerfilLocalStore.removeFilter("perfilSeleccionado");
        combinacionesFormaPerfilLocalStore.addFilter([
        {
            id: "perfilSeleccionado",
            property: "tipo_cliente_id",
            value: record.get("id"),
            exactMatch: true
        }
        ]);
    },

    onBtnAgregarFormaPagoClick: function(button, e, eOpts) {
        var me = this,
            formasPagoStore = Ext.create("Entregas100Web.store.FormasPagoStore", {}),
            combinacionesFormaPerfilLocalStore = me.getStore("CombinacionesFormaPerfilLocalStore"),
            perfilPagoRecord = me.view.down("#perfilesPagoGrid").getSelection()[0],
            formPagoDialog, formasCombinadas, waitWindow;

        // si no ha sido seleccionada una forma de pago a la cual agregar la combinacion
        if (!perfilPagoRecord) {
            Ext.Msg.show({
                title: "Mensaje del sistema",
                message: "Seleccione un perfil de pago",
                buttons: Ext.Msg.OK,
                icon: Ext.Msg.ERROR
            });
            return;
        }


        // se guardan los ids de las formas ya combinadas para evitar duplicidad
        formasCombinadas = combinacionesFormaPerfilLocalStore.getData().getValues("forma_pago_id", "data");
        formasPagoStore.addFilter([
        {
            id: "formasRestantes",
            filterFn: function(record) {
                return !Ext.Array.contains(formasCombinadas, record.get("id"));
            }
        }
        ]);

        // muestra el dialogo para seleccionar la forma de pago
        formPagoDialog = Ext.create("Pyansa.window.dialog.ComboBox", {
            title: "Seleccione una forma de pago",
            field: {
                fieldLabel: "Forma de Pago",
                store: formasPagoStore,
                valueField: "id",
                displayField: "descripcion"
            },
            listeners: {
                accept: onFormaPagoSeleccionada
            }
        });

        function onFormaPagoSeleccionada(value, combo) {
            waitWindow = Ext.Msg.wait("Guardando cambios...");
            this.close();

            // guarda la combinacion en el store y lo sync
            combinacionesFormaPerfilLocalStore.add([
            {
                forma_pago_id: value,
                forma_pago: combo.getDisplayValue(),
                tipo_cliente_id: perfilPagoRecord.get("id"),
                tipo_cliente: perfilPagoRecord.get("descripcion")
            }
            ]);
            combinacionesFormaPerfilLocalStore.sync({
                success: onSyncSuccess
            });
        }

        function onSyncSuccess() {
            waitWindow.close();
        }
    },

    onPerfilesPagoPanelBeforeRender: function(component, eOpts) {
        var me = this,
            combinacionesFormaPerfilLocalStore = me.getStore("CombinacionesFormaPerfilLocalStore");

        // inicialmente no se muestra ninguna combinacion ya que ninguna forma de pago ha
        // sido seleccionada
        combinacionesFormaPerfilLocalStore.addFilter([
        {
            id: "perfilSeleccionado",
            filterFn: function () {
                return false;
            }
        }
        ]);
    }

});
