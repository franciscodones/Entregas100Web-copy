/*
 * File: app/view/ManguerasPanelViewController.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Entregas100Web.view.ManguerasPanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.mangueraspanel',

    onCmbPlazaAfterRender: function(component, eOpts) {
        var plaza = Ext.getStore('mangueras.PlazasStore').load();
    },

    onCmbRubroVentaAfterRender: function(component, eOpts) {
        var store = Ext.getStore('mangueras.RubrosVentasStore').load({
            callback:function(){
                store.add({
                    id_rubro_venta: 0,
                    rubro_venta: 'T',
                    nombre: 'TODOS'
                });

                store.sort([
                {
                    property : 'id_rubro_venta',
                    direction: 'ASC'
                }
                ]);
            }
        });
    },

    onBtnBuscarClick: function(button, e, eOpts) {
        Ext.Msg.wait('<center>Cargando Información, Espere un momento</center>','<center>Mensaje de Sistema</center>');
        var plaza = this.getView().down('#cmbPlaza').getValue(),
            rubroVenta = this.getView().down('#cmbRubroVenta').getValue();

        if(plaza === null){
            Ext.MessageBox.show({
                title: '<center>Mensaje de Sistema</center>',
                msg: '<center>Seleccione la plaza por favor!</center>',
                closable:false,
                buttons: Ext.Msg.OK,
                buttonText:{ok:"Aceptar"},
                icon: Ext.Msg.ERROR
            });
        }else if(rubroVenta === null){
            Ext.MessageBox.show({
                title: '<center>Mensaje de Sistema</center>',
                msg: '<center>Seleccione un Rubro de Venta por favor!</center>',
                closable:false,
                buttons: Ext.Msg.OK,
                buttonText:{ok:"Aceptar"},
                icon: Ext.Msg.ERROR
            });
        }else{
            Ext.getStore('mangueras.ManguerasStore').load({
                params:{
                    plaza_id: plaza,
                    rubro_venta_id: rubroVenta,
                    todos:false
                },callback:function(){
                    Ext.Msg.hide();
                }
            });
        }
    },

    onBtnExcelClick: function(button, e, eOpts) {
        try{
            var x = Ext.getStore('mangueras.ManguerasStore').data.items;
            if(x != ""){
                Ext.Msg.wait('<center>Generando Archivo Excel, espere un momento...</center>','<center>Mensaje de Sistema</center>');
                var json = "";
                var resp = "";
                Ext.Array.each(x, function(data,i){
                    if(Ext.isEmpty(json)){
                        json = Ext.JSON.encode(data.data);
                    }else{
                        json +=','+Ext.JSON.encode(data.data);
                    }
                });
                Ext.Ajax.request({
                    url:'api/Mangueras/excel',
                    timeout:600000,
                    params:{
                        records:'['+json+']',
                        plaza:this.getView().down('#cmbPlaza').rawValue

                    },
                    success:function(response){
                        var resp = Ext.JSON.decode(response.responseText);
                        if(resp.success){
                            Ext.Msg.hide(
                            null,
                            function(){
                                Ext.DomHelper.append(document.body, {
                                    tag: 'iframe',
                                    id:'file',
                                    frameBorder: 0,
                                    width: 0,
                                    height: 0,
                                    css: 'display:none;visibility:hidden;height:0px;',
                                    src: 'api/Mangueras/descarga?file='+resp.records
                                });

                            }
                            );
                        }else{
                            Ext.Msg.hide(
                            null,
                            function(){
                                Ext.MessageBox.show({
                                    title: '<center>Mensaje de Sistema</center>',
                                    msg: "<center>Error al generar arhivo, intentelo de nuevo1</center>",
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.Msg.OK,
                                    buttonText:{ok:"Aceptar"},
                                    closable:false
                                });
                            }
                            );
                        }
                    },
                    failure:function(error){
                        Ext.Msg.hide(
                        null,
                        function(){
                            Ext.MessageBox.show({
                                title: '<center>Mensaje de Sistema</center>',
                                msg: "<center>Error al generar arhivo, intentelo de nuevo3</center>",
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.Msg.OK,
                                buttonText:{ok:"Aceptar"},
                                closable:false
                            });
                        }
                        );

                    }
                });
            }else{
                Ext.MessageBox.show({
                    title: '<center>Mensaje de Sistema</center>',
                    msg: "<center>No hay datos para imprimir</center>",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.Msg.OK,
                    buttonText:{ok:"Aceptar"},
                    closable:false
                });
            }
        }catch(Exception){
            Ext.MessageBox.show({
                title: '<center>Mensaje de Sistema</center>',
                msg: Exception,
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.Msg.OK,
                buttonText:{ok:"Aceptar"},
                closable:false
            });
        }
    },

    onBtnAgregarClick: function(button, e, eOpts) {
        var window = this;
        Ext.Msg.wait('<center>Cargando Información, Espere un momento</center>','<center>Mensaje de Sistema</center>');
        var ventana = Ext.create('widget.windownewmanguera');

        var plaza = window.getStore('localPlazasStore');
        plaza.load({
            callback:function(){
                var rubro = window.getStore('localRubrosVentasStore');
                rubro.load({
                    callback:function(){
                        ventana.down('#cmbPlaza').setStore(plaza);
                        ventana.down('#cmbCanalVenta').setStore(rubro);
                        Ext.Msg.hide();
                        ventana.show();
                    }
                });
            }
        });
    },

    onBtnInsertarInformacionClick: function(button, e, eOpts) {
        var window = this;
        Ext.Msg.wait('<center>Cargando Información, Espere un momento</center>','<center>Mensaje de Sistema</center>');
        var ventana = Ext.create('widget.windowreinsertarinformacionmangueras');

        var store = Ext.getStore('mangueras.ManguerasReInsertarStore');
        store.load({
            callback:function(){
                Ext.Msg.hide();
                ventana.show();
            }
        });
    },

    onMangueraspanelClose: function(panel, eOpts) {
        Ext.getStore('mangueras.ManguerasStore').removeAll();
    }

});
