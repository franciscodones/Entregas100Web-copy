/*
 * File: app/view/EditarHorarioZonaWindow.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Entregas100Web.view.EditarHorarioZonaWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.editarhorariozonawindow',

    requires: [
        'Entregas100Web.view.EditarHorarioZonaWindowViewModel',
        'Entregas100Web.view.EditarHorarioZonaWindowViewController',
        'Ext.form.Panel',
        'Ext.form.FieldContainer',
        'Ext.toolbar.Spacer',
        'Ext.form.field.Time',
        'Ext.button.Button',
        'Ext.form.field.Hidden'
    ],

    controller: 'editarhorariozonawindow',
    viewModel: {
        type: 'editarhorariozonawindow'
    },
    modal: true,
    id: 'editarHorarioZonaWindow',
    width: 500,
    glyph: 'f017@FontAwesome',
    title: 'Editar Horario de Lista',

    items: [
        {
            xtype: 'form',
            trimValues: true,
            itemId: 'editarHorarioZonaForm',
            bodyPadding: 10,
            items: [
                {
                    xtype: 'fieldcontainer',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'combobox',
                            flex: 1,
                            itemId: 'cmbPlaza',
                            fieldLabel: 'Plaza',
                            name: 'plaza_id',
                            allowBlank: false,
                            editable: false,
                            matchFieldWidth: false,
                            displayField: 'ciudad',
                            forceSelection: true,
                            valueField: 'id',
                            bind: {
                                store: '{PlazasLocalStore}'
                            },
                            listeners: {
                                select: 'onCmbPlazaSelect'
                            }
                        },
                        {
                            xtype: 'tbspacer',
                            width: 20
                        },
                        {
                            xtype: 'combobox',
                            flex: 1,
                            itemId: 'cmbZona',
                            fieldLabel: 'Zona',
                            name: 'zona_id',
                            allowBlank: false,
                            editable: false,
                            matchFieldWidth: false,
                            displayField: 'zona',
                            forceSelection: true,
                            valueField: 'id',
                            bind: {
                                store: '{ZonasLocalStore}'
                            },
                            listeners: {
                                select: 'onCmbZonaSelect'
                            }
                        }
                    ]
                },
                {
                    xtype: 'fieldcontainer',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'timefield',
                            flex: 1,
                            itemId: 'timeHoraInicial',
                            fieldLabel: 'Hora inicial',
                            name: 'hora_inicial',
                            allowBlank: false,
                            editable: false,
                            matchFieldWidth: false,
                            forceSelection: true,
                            increment: 30,
                            maxValue: '11:00 PM',
                            minValue: '12:00 PM',
                            listeners: {
                                select: 'onTimeHoraInicialSelect'
                            }
                        },
                        {
                            xtype: 'tbspacer',
                            width: 20
                        },
                        {
                            xtype: 'timefield',
                            validator: function(value) {
                                var horaInicial = this.up("form").getForm().getFieldValues().hora_inicial,
                                    horaFinal = this.getValue();

                                if (horaInicial < horaFinal) {
                                    return true;
                                } else {
                                    return "El horario inicial debe ser menor al horario final";
                                }
                            },
                            flex: 1,
                            itemId: 'timeHoraFinal',
                            fieldLabel: 'Hora final',
                            name: 'hora_final',
                            allowBlank: false,
                            editable: false,
                            matchFieldWidth: false,
                            forceSelection: true,
                            increment: 30,
                            maxValue: '11:30 PM'
                        }
                    ]
                },
                {
                    xtype: 'fieldcontainer',
                    margin: '20 0 0 0',
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'button',
                            itemId: 'btnCancelar',
                            width: 120,
                            glyph: 'f057@FontAwesome',
                            text: 'Cancelar',
                            listeners: {
                                click: 'onBtnCancelarClick'
                            }
                        },
                        {
                            xtype: 'tbspacer',
                            width: 20
                        },
                        {
                            xtype: 'button',
                            itemId: 'btnGuardar',
                            width: 120,
                            glyph: 'f058@FontAwesome',
                            text: 'Guardar',
                            listeners: {
                                click: 'onBtnGuardarClick'
                            }
                        }
                    ]
                },
                {
                    xtype: 'hiddenfield',
                    anchor: '100%',
                    itemId: 'hidZona',
                    name: 'zona'
                },
                {
                    xtype: 'hiddenfield',
                    anchor: '100%',
                    itemId: 'hidPlaza',
                    name: 'plaza'
                }
            ]
        }
    ],
    listeners: {
        beforerender: 'onEditarHorarioZonaWindowBeforeRender'
    }

});